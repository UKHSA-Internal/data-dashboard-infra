name: Production Workflow

on:
  push:
    branches:
      - "main"
  repository_dispatch:
    types: [trigger-deployments]

env:
  AWS_REGION: "eu-west-2"

permissions:
  id-token: write
  contents: read

jobs:
  terraform_plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.UHD_TERRAFORM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: ./.github/actions/setup-terraform
      - uses: ./.github/actions/setup-zsh

      - name: Terraform plan
        run: |
          source uhd.sh
          uhd terraform init
          uhd terraform plan:layer 10-account prod
          uhd terraform plan:layer 20-app prod
        shell: zsh {0}

  terraform_apply:
    name: Terraform apply
    runs-on: ubuntu-latest
    needs: ["terraform_plan"]
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.UHD_TERRAFORM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: ./.github/actions/setup-terraform
      - uses: ./.github/actions/setup-zsh

      - name: Terraform apply
        run: |
          source uhd.sh
          uhd terraform init
          uhd terraform apply:layer 10-account prod
          uhd terraform apply:layer 20-app prod
        shell: zsh {0}

  push_docker_images:
    name: Push docker images
    runs-on: ubuntu-latest
    needs: ["terraform_apply"]
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.UHD_TERRAFORM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: ./.github/actions/setup-zsh

      - name: Pull / push docker images
        run: |
          source uhd.sh
          uhd docker ecr:login
          uhd docker pull
          uhd docker ecr:login prod
          uhd docker push prod prod
        shell: zsh {0}

  restart_services:
    name: Restart services
    runs-on: ubuntu-latest
    needs: ["push_docker_images"]
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.UHD_TERRAFORM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: ./.github/actions/setup-zsh

      - name: Terraform output
        run: |
          source uhd.sh
          uhd terraform init:layer 20-app
          uhd terraform output:layer 20-app prod
        shell: zsh {0}

      - name: Configure AWS credentials for ECS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.UHD_ECS_ROLE_PROD }}
          aws-region: ${{ env.AWS_REGION }}
          role-chaining: true

      - name: Restart ECS services
        run: |
          source uhd.sh
          uhd ecs restart-services
        shell: zsh {0}

      - name: Redeploy lambda functions
        run: |
          source uhd.sh
          uhd lambda redeploy-functions
        shell: zsh {0}

  fast_forward_env_branches:
    name: Fast forward env branches
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      deploy_dev: ${{ steps.fast_forward_merge.outputs.deploy_dev }}
      deploy_test: ${{ steps.fast_forward_merge.outputs.deploy_test }}
      deploy_uat: ${{ steps.fast_forward_merge.outputs.deploy_uat }}
      deploy_train: ${{ steps.fast_forward_merge.outputs.deploy_train }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: ./.github/actions/setup-zsh

      - name: Fast forward env branches
        id: fast_forward_merge
        run: |
          - scripts/fast-forward-env-branches.sh
        shell: zsh {0}
        env:
          GH_TOKEN: ${{ github.token }}

  deploy_dev:
    needs: fast_forward_env_branches
    if: ${{needs.fast_forward_env_branches.outputs.deploy_dev}}
    uses: ./.github/workflows/well-known-environment.yml
    with:
      branch: env/dev/dev
    secrets: inherit

  deploy_test:
    needs: fast_forward_env_branches
    if: ${{needs.fast_forward_env_branches.outputs.deploy_test}}
    uses: ./.github/workflows/well-known-environment.yml
    with:
      branch: env/test/test
    secrets: inherit

  deploy_uat:
    needs: fast_forward_env_branches
    if: ${{needs.fast_forward_env_branches.outputs.deploy_uat}}
    uses: ./.github/workflows/well-known-environment.yml
    with:
      branch: env/uat/uat
    secrets: inherit

  deploy_train:
    needs: fast_forward_env_branches
    if: ${{needs.fast_forward_env_branches.outputs.deploy_train}}
    uses: ./.github/workflows/well-known-environment.yml
    with:
      branch: env/uat/train
    secrets: inherit
