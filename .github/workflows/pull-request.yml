name: Pull Request Workflow

on:
  pull_request:
    branches:
      - "*"

env:
  AWS_REGION: "eu-west-2"

permissions:
  id-token: write
  contents: read

jobs:
  build_base:
    name: Build base env
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.UHD_TERRAFORM_IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - uses: ./.github/actions/setup-terraform
      - uses: ./.github/actions/setup-zsh
      - uses: ./.github/actions/short-sha

      - name: Build base env for public & auth
        run: |
          source uhd.sh
          uhd terraform init:layer 20-app
          uhd terraform apply:layer 20-app ci-$SHORT_SHA
          uhd terraform apply:layer 20-app ci-$SHORT_SHA-a
        shell: zsh {0}

  terraform_plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    needs: ["build_base"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5

      - name: Configure AWS credentials for tools account
        uses: ./.github/actions/configure-aws-credentials
        with:
          aws-region: ${{ env.AWS_REGION }}
          tools-account-role: ${{ secrets.UHD_TERRAFORM_IAM_ROLE }}

      - uses: ./.github/actions/setup-terraform
      - uses: ./.github/actions/setup-zsh
      - uses: ./.github/actions/short-sha

      - name: Terraform plan for public & auth
        run: |
          source uhd.sh
          uhd terraform init
          uhd terraform plan:layer 20-app ci-$SHORT_SHA
          uhd terraform plan:layer 20-app ci-$SHORT_SHA-a
        shell: zsh {0}

  terraform_apply:
    name: Terraform apply
    runs-on: ubuntu-latest
    needs: ["terraform_plan"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5

      - name: Configure AWS credentials for tools account
        uses: ./.github/actions/configure-aws-credentials
        with:
          aws-region: ${{ env.AWS_REGION }}
          tools-account-role: ${{ secrets.UHD_TERRAFORM_IAM_ROLE }}

      - uses: ./.github/actions/setup-terraform
      - uses: ./.github/actions/setup-zsh
      - uses: ./.github/actions/short-sha

      - name: Terraform apply for public & auth
        run: |
          source uhd.sh
          uhd terraform init
          uhd terraform apply:layer 20-app ci-$SHORT_SHA
          uhd terraform apply:layer 20-app ci-$SHORT_SHA-a
        shell: zsh {0}

  push_docker_images:
    name: Push docker images
    runs-on: ubuntu-latest
    needs: ["terraform_apply"]
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: ./.github/actions/configure-aws-credentials
        with:
          aws-region: ${{ env.AWS_REGION }}
          tools-account-role: ${{ secrets.UHD_TERRAFORM_IAM_ROLE }}

      - uses: ./.github/actions/setup-zsh
      - uses: ./.github/actions/short-sha

      - name: Pull / push docker images for public & auth
        run: |
          source uhd.sh
          uhd docker update test ci-$SHORT_SHA
          uhd docker update test ci-$SHORT_SHA-a
        shell: zsh {0}

  restart_services:
    name: Restart services
    runs-on: ubuntu-latest
    needs: ["push_docker_images"]
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: ./.github/actions/configure-aws-credentials
        with:
          aws-region: ${{ env.AWS_REGION }}
          tools-account-role: ${{ secrets.UHD_TERRAFORM_IAM_ROLE }}

      - uses: ./.github/actions/setup-terraform
      - uses: ./.github/actions/setup-zsh
      - uses: ./.github/actions/short-sha

      - name: Restart ECS services for public & auth
        run: |
          source uhd.sh
          uhd ecs restart-services ci-$SHORT_SHA
          uhd ecs restart-services ci-$SHORT_SHA-a
        shell: zsh {0}

      - name: Redeploy lambda functions for public & auth
        run: |
          source uhd.sh
          uhd lambda restart-functions ci-$SHORT_SHA
          uhd lambda restart-functions ci-$SHORT_SHA-a
        shell: zsh {0}

  terraform_destroy:
    name: Terraform destroy
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: ["restart_services"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5

      - name: Configure AWS credentials
        uses: ./.github/actions/configure-aws-credentials
        with:
          aws-region: ${{ env.AWS_REGION }}
          tools-account-role: ${{ secrets.UHD_TERRAFORM_IAM_ROLE }}

      - uses: ./.github/actions/setup-terraform
      - uses: ./.github/actions/setup-zsh
      - uses: ./.github/actions/short-sha

      - name: Terraform destroy for public & auth
        run: |
          source uhd.sh
          uhd terraform init:layer 20-app
          uhd terraform destroy:layer 20-app ci-$SHORT_SHA
          uhd terraform destroy:layer 20-app ci-$SHORT_SHA-a
        shell: zsh {0}

  clean_up_remaining_resources:
    name: Clean up remaining resources
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: ["terraform_destroy"]
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: ./.github/actions/configure-aws-credentials
        with:
          aws-region: ${{ env.AWS_REGION }}
          tools-account-role: ${{ secrets.UHD_TERRAFORM_IAM_ROLE }}

      - uses: ./.github/actions/setup-zsh
      - uses: ./.github/actions/short-sha

      - name: Delete secrets for public & auth
        run: |
          source uhd.sh
          uhd secrets delete-all-secrets ci-$SHORT_SHA
          uhd secrets delete-all-secrets ci-$SHORT_SHA-a
        shell: zsh {0}